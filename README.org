* Notes
Oz was tried on day 8 and 9 but wasn't suited/I wasn't good enough with it to use it on that problem, so it was replaced by a(n ugly/rushed) python solution instead. Common Lisp took its place the 9th.
Octave was attempted on the 9th.
Oz took over Carp's entry on the 11th.
Carp and Hare was removed for the lack of example-code and documentation. Understandable for smaller/newer languages, but makes it hard to do a 1-day challenge in like this. Hopefully I get to revisit them some day without the time constraint.

Day 15 and 16 both took a considerable amount of time, pushing the coming tasks a bit further ahead, though hopefully I can catch up again. Both getting to the solution and the running time of day 15 and 16 were long, be ware if you try to run them.

Prolog got replaced on day 20 because I couldn't get GNU Prolog to read any files, and examples from the documentation gave existence errors. Replaced with Java.

Erlang got replaced because couldn't get used to how it worked. Prolog would have probably gone the same path if I could get it working. Swapped with clojure as it seemed like a nice fit for the day. Replaced by Scala.

Remember to write a little note on which languages 
** Compilers/tools needed to run all:
 - R
 - Guile
 - GNU APL
 - GNU Eiffel
 - Go
 - GHC
 - Luajit
 - Python 3
 - SBCL
 - GCC
 - Mozart2/Oz
 - Ocaml
 - Julia
 - Nodejs
 - Octave
 - .NET 7
 - Haxe (including cpp compiler module)
 - Java (openjdk 19.0.1)
 - Clojure
 - Maxima
** Previous usage of the languages used to solve the problems
*** Fresh usage (within the last year)
 - Scheme
 - Python
 - R
 - Ocaml
 - Common Lisp
 - Rust
*** Long time since last use (several years since last use)
 - Lua
 - C
 - Javascript
 - Oz
 - Java
*** Never used before (hello world or less)
 - APL
 - Eiffel
 - Go
 - Haskell
 - Octave
 - Carp
 - Julia
 - Hare
 - Ada
 - Erlang
 - Haxe
 - Fortran
 - Clojure
 - Zig
* Days/Languages
- [X] Day 1, R
  - [X] Task 1
  - [X] Task 2
- [X] Day 2, Scheme
  - [X] Task 1
  - [X] Task 2
- [X] Day 3, APL
  - [X] Task 1
  - [X] Task 2
- [X] Day 4, Eiffel
  - [X] Task 1
  - [X] Task 2
- [X] Day 5, Go
  - [X] Task 1
  - [X] Task 2
- [X] Day 6, Haskell
  - [X] Task 1
  - [X] Task 2
- [X] Day 7, Lua
  - [X] Task 1
  - [X] Task 2
- [X] Day 8, Python
  - [X] Task 1
  - [X] Task 2
- [X] Day 9, Common Lisp
  - [X] Task 1
  - [X] Task 2
- [X] Day 10, C
  - [X] Task 1
  - [X] Task 2
- [X] Day 11, Oz
  - [X] Task 1
  - [X] Task 2
- [X] Day 12, Ocaml
  - [X] Task 1
  - [X] Task 2
- [X] Day 13, Julia
  - [X] Task 1
  - [X] Task 2
- [X] Day 14, Javascript
  - [X] Task 1
  - [X] Task 2
- [X] Day 15, Octave
  - [X] Task 1
  - [X] Task 2
- [X] Day 16, C#
  - [X] Task 1
  - [X] Task 2
- [X] Day 17, C++
  - [X] Task 1
  - [X] Task 2
- [X] Day 18, Fortran
  - [X] Task 1
  - [X] Task 2
- [X] Day 19, Haxe
  - [X] Task 1
  - [X] Task 2
- [X] Day 20, Java
  - [X] Task 1
  - [X] Task 2
- [X] Day 21, Clojure
  - [X] Task 1
  - [X] Task 2, requires maxima to run.
- [ ] Day 22, Ada
  - [ ] Task 1
  - [ ] Task 2
- [ ] Day 23, Scala
  - [ ] Task 1
  - [ ] Task 2
- [ ] Day 24, Rust
  - [ ] Task 1
  - [ ] Task 2
- [ ] Day 25, Zig
  - [ ] Task 1
  - [ ] Task 2

* Potential alternatives:
** Safe
 - F#
 - Emacs Lisp
 - Racket
 - TypeScript
** Unknown/Unsure/Single-editor-unfriendly
 - Nim
 - Carp
 - Arc
 - Hare
 - Bash
 - Tcl
 - Carbon
 - Dylan
 - Swift
 - DART
 - Ruby
 - Reason
 - Cell
 - Elm
 - D
 - Awk
 - Perl
 - Elixir
 - Erlang
 - Kotlin
 - Mercury
 - Pony
 - Vala
 - Forth
 - Fortress
 - Smalltalk
 - Pascal
 - COBOL
 - Miranda
 - Prolog
